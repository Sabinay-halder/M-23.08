package com.widevision.pregnantwoman.baby;

import android.app.Activity;
import android.app.Dialog;
import android.content.Intent;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Toast;

import com.mobsandgeeks.saripaar.ValidationError;
import com.mobsandgeeks.saripaar.Validator;
import com.mobsandgeeks.saripaar.annotation.NotEmpty;
import com.wdullaer.materialdatetimepicker.date.DatePickerDialog;
import com.widevision.pregnantwoman.MainFragmentActivity;
import com.widevision.pregnantwoman.R;
import com.widevision.pregnantwoman.database.ActiveAndroidDBHelper;
import com.widevision.pregnantwoman.database.BabyInfoTable;
import com.widevision.pregnantwoman.model.HideKeyFragment;
import com.widevision.pregnantwoman.util.Constant;

import org.adw.library.widgets.discreteseekbar.DiscreteSeekBar;
import org.joda.time.DateTime;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;

import java.util.Calendar;
import java.util.List;

import butterknife.Bind;
import butterknife.ButterKnife;

/**
 * Created by mercury-two on 17/8/15.
 */
public class BabyHeightWeight extends HideKeyFragment implements DatePickerDialog.OnDateSetListener, Validator.ValidationListener {

    @Bind(R.id.bttnoteheiwei)
    ImageView noteBTTN;
    @NotEmpty(message = "Name Required.")
    @Bind(R.id.etnameheiwei)
    EditText nameET;
    @NotEmpty(message = "DOB Required.")
    @Bind(R.id.etDOBheiwei)
    EditText dateofbirthET;
    @NotEmpty(message = "Name Required.")
    @Bind(R.id.etgenderheiwei)
    EditText genderET;
    @NotEmpty(message = "Date Required.")
    @Bind(R.id.etdatemeasureheiwei)
    EditText dateMeasureEt;

    @Bind(R.id.sbweightheiwei)
    DiscreteSeekBar weightSB;
    @Bind(R.id.sbheightheiwei)
    DiscreteSeekBar heightSB;
    @NotEmpty(message = "Weight Required.")
    @Bind(R.id.etweightheiwei)
    EditText weightET;
    @NotEmpty(message = "Height Required.")
    @Bind(R.id.etheightheiwei)
    EditText heightET;


    @Bind(R.id.bttnsaveheiwei)
    Button saveBTTN;
    @Bind(R.id.bttncancleheiwei)
    Button cancelBTTN;

    private ActiveAndroidDBHelper helper;
    private Validator validator;

    private boolean aDate = false, bDate = false;
    private String name, date, datemeasure, weight, height, gender, notettitle, note;
    private float weigh;
    private int heig;
    private long babyid;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.baby_height_weightfragment, container, false);
        ButterKnife.bind(this, view);
        setupUI(view);

        helper = ActiveAndroidDBHelper.getInstance();
        validator = new Validator(this);
        validator.setValidationListener(this);

        Intent in = getActivity().getIntent();
        Bundle b = in.getExtras();
        String match = b.getString("1111");

        /*Fetch Value From Dialog List*/

        if (match.equals("dialog")) {
            babyid = b.getLong("ID");
            name = b.getString("NAME");
            date = b.getString("DATE");
            gender = b.getString("GENDER");

            nameET.setText(name);
            dateofbirthET.setText(date);
            genderET.setText(gender);

            Log.i("Dialog>>>>>>>>>>>>>>>>>>>_------", "    " + babyid + "     " + name + "   " + date + "" + gender);

        } else if (match.equals("info")) {

              /*Fetch Value From Database*/
            List<BabyInfoTable> list = helper.babyDetail();
            if (list != null && list.size() != 0) {
                for (BabyInfoTable item : list) {
                    babyid = item.getId();
                    name = item.name;
                    date = item.dobbaby;
                    gender = item.genderbaby;
                }
            }
            nameET.setText(name);
            dateofbirthET.setText(date);
            genderET.setText(gender);
            Log.i("Info Detail>>>>>>>>>>>>>>>>>>>", " " + babyid + " " + name + " " + date + " " + gender);

        }

        /*Note Button*/
        noteBTTN.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                setNoteDialog(getActivity(), "");
            }
        });

         /*Date picker*/
        dateMeasureEt.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View view, boolean b) {
                aDate = b;
                if (b) {
                    DateTimeFormatter formatter = DateTimeFormat.forPattern(Constant.datePattern);
                    DateTime dt = formatter.parseDateTime(date);

                    Calendar calendar = Calendar.getInstance();
                    calendar.set(Calendar.DAY_OF_MONTH, dt.getDayOfMonth());
                    calendar.set(Calendar.MONTH, dt.getMonthOfYear() - 1);
                    calendar.set(Calendar.YEAR, dt.getYear());

                    Calendar now = Calendar.getInstance();
                    DatePickerDialog dpd = DatePickerDialog.newInstance(
                            BabyHeightWeight.this,
                            now.get(Calendar.YEAR),
                            now.get(Calendar.MONTH),
                            now.get(Calendar.DAY_OF_MONTH)
                    );

                    dpd.setMaxDate(now);
                    dpd.setMinDate(calendar);

                    dpd.show(getActivity().getFragmentManager(), "Datepickerdialog");
                }
            }
        });

        dateMeasureEt.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                aDate = true;
                DateTimeFormatter formatter = DateTimeFormat.forPattern(Constant.datePattern);
                DateTime dt = formatter.parseDateTime(date);

                Calendar calendar = Calendar.getInstance();
                calendar.set(Calendar.DAY_OF_MONTH, dt.getDayOfMonth());
                calendar.set(Calendar.MONTH, dt.getMonthOfYear() - 1);
                calendar.set(Calendar.YEAR, dt.getYear());

                Calendar now = Calendar.getInstance();
                DatePickerDialog dpd = DatePickerDialog.newInstance(BabyHeightWeight.this, now.get(Calendar.YEAR),
                        now.get(Calendar.MONTH), now.get(Calendar.DAY_OF_MONTH)
                );
                dpd.setMinDate(calendar);
                dpd.setMaxDate(now);
                dpd.show(getActivity().getFragmentManager(), "Datepickerdialog");
            }
        });

        /*SeekBars*/

        weightSB.setNumericTransformer(new DiscreteSeekBar.NumericTransformer() {
            @Override
            public int transform(int i) {
                weightET.setText("" + i);
                return i;
            }
        });

        heightSB.setNumericTransformer(new DiscreteSeekBar.NumericTransformer() {
            @Override
            public int transform(int i) {
                heightET.setText("" + i);
                return i;
            }
        });

        /*Save Button*/
        saveBTTN.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                validator.validate();

            }
        });
        /*Cancle Button*/
        cancelBTTN.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                MainFragmentActivity.fragmentManager.popBackStack();
            }
        });
        return view;
    }


    /*Date Set*/
    @Override
    public void onDateSet(DatePickerDialog datePickerDialog, int year, int month, int day) {

        String mount = String.valueOf(month + 1);
        String da = String.valueOf(day);
        if (mount.length() < 2) {
            mount = "0" + mount;
        }
        if (da.length() < 2) {
            da = "0" + da;
        }
        String datesave = year + "-" + mount + "-" + da;
        dateMeasureEt.setText(datesave);
    }

    /*Validation Set*/
    @Override
    public void onValidationSucceeded() {

        name = nameET.getText().toString().trim();
        datemeasure = dateMeasureEt.getText().toString().trim();
        weight = weightET.getText().toString().trim();
        height = heightET.getText().toString().trim();

        weigh = Float.parseFloat(weight);
        heig = Integer.parseInt(height);

        Log.e("HeiWeibaby", babyid + " " + name + " " + date + " " + datemeasure + " " + gender + " " + weight + " " + height + " " + notettitle + " " + note);

        helper.addBabyHeiWei(babyid, datemeasure, gender, weigh, heig, notettitle, note);
        Constant.babysaveAlert(getActivity(), "Weight and Height added Successfully.");

    }

    @Override
    public void onValidationFailed(List<ValidationError> errors) {
        Constant.setAlert(getActivity(), errors.get(0).getCollatedErrorMessage(getActivity()));
    }

    /*Dialog box for confirmation*/
    public void setNoteDialog(final Activity activity, String msg) {
        final Dialog dialog = new Dialog(activity, R.style.DialogSlideAnim);
        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
        dialog.setContentView(R.layout.add_note_activity);
        dialog.getWindow().setLayout(Constant.width - 10, ViewGroup.LayoutParams.FILL_PARENT);
        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
        setupUI(getView());
        Button savebttn = (Button) dialog.findViewById(R.id.saveBt);
        final EditText title = (EditText) dialog.findViewById(R.id.titleEdt);
        final EditText noteet = (EditText) dialog.findViewById(R.id.noteEdt);

        /*Dialog Buttons*/
        savebttn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                note = noteet.getText().toString();
                notettitle = title.getText().toString();

                if (note.trim().equals("") || notettitle.trim().equals("")) {
                    Toast.makeText(getActivity(), "All Fields are Required. ", Toast.LENGTH_SHORT).show();
                    return;
                } else {

                    dialog.dismiss();
                }
            }
        });
        dialog.show();
    }
}
