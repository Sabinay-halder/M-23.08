package com.widevision.pregnantwoman;

import android.app.Dialog;
import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.daimajia.slider.library.Animations.DescriptionAnimation;
import com.daimajia.slider.library.SliderLayout;
import com.daimajia.slider.library.SliderTypes.BaseSliderView;
import com.daimajia.slider.library.SliderTypes.TextSliderView;
import com.daimajia.slider.library.Tricks.ViewPagerEx;
import com.widevision.pregnantwoman.baby.BabyHomeActivity;
import com.widevision.pregnantwoman.baby.BabyNameAdapter;
import com.widevision.pregnantwoman.database.ActiveAndroidDBHelper;
import com.widevision.pregnantwoman.database.MotherRecordTable;
import com.widevision.pregnantwoman.model.HideKeyActivity;
import com.widevision.pregnantwoman.mother.WomanHomeActivity;
import com.widevision.pregnantwoman.util.Constant;
import com.widevision.pregnantwoman.util.PreferenceConnector;

import java.util.HashMap;
import java.util.List;

import butterknife.Bind;
import butterknife.ButterKnife;

/**
 * Created by newtrainee on 7/8/15.
 */
public class HomeActivity extends HideKeyActivity implements BaseSliderView.OnSliderClickListener, ViewPagerEx.OnPageChangeListener {

    @Bind(R.id.mother_btn)
    Button mMotherBtn;
    @Bind(R.id.baby_btn)
    Button mBabyBtn;
    SliderLayout mDemoSlider;

    private ActiveAndroidDBHelper helper;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.home_activity);
        ButterKnife.bind(HomeActivity.this);
        helper = ActiveAndroidDBHelper.getInstance();
        mDemoSlider = (SliderLayout) findViewById(R.id.slider);
        HashMap<String, Integer> file_maps = new HashMap<String, Integer>();
        file_maps.put("Hannibal", R.drawable.hannibal);
        file_maps.put("Big Bang Theory", R.drawable.bigbang);
        file_maps.put("House of Cards", R.drawable.house);
        file_maps.put("Game of Thrones", R.drawable.game_of_thrones);

        for (String name : file_maps.keySet()) {
            TextSliderView textSliderView = new TextSliderView(this);
            // initialize a SliderLayout
            textSliderView
                    .description(name)
                    .image(file_maps.get(name))
                    .setScaleType(BaseSliderView.ScaleType.Fit)
                    .setOnSliderClickListener(this);

            //add your extra information
            textSliderView.bundle(new Bundle());
            textSliderView.getBundle()
                    .putString("extra", name);

            mDemoSlider.addSlider(textSliderView);
        }
        mDemoSlider.setPresetTransformer(SliderLayout.Transformer.DepthPage);
        mDemoSlider.setPresetIndicator(SliderLayout.PresetIndicators.Center_Bottom);
        mDemoSlider.setCustomAnimation(new DescriptionAnimation());
        mDemoSlider.setDuration(4000);
        mDemoSlider.addOnPageChangeListener(this);
        mMotherBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if (PreferenceConnector.readString(HomeActivity.this, PreferenceConnector.IS_FIRSTTIME_MOTHER, "Yes").equals("Yes")) {
                    startActivity(new Intent(HomeActivity.this, WomanHomeActivity.class));
                    finish();
                } else {
                    startActivity(new Intent(HomeActivity.this, MainFragmentActivity.class));
                    finish();
                }
            }
        });
        mBabyBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if (PreferenceConnector.readString(HomeActivity.this, PreferenceConnector.IS_FIRSTTIME_BABY, "Yes").equals("Yes")) {
                    startActivity(new Intent(HomeActivity.this, BabyHomeActivity.class));
                    finish();
                } else {
                    BabyNameAdapter.setBabysDialog(HomeActivity.this, " ");
                }

            }
        });
    }


    void motherProfileSelectionDialog() {
        final Dialog dialog = new Dialog(HomeActivity.this);
        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
        dialog.setContentView(R.layout.dialog_select_motherprofile);
        dialog.getWindow().setLayout(ViewGroup.LayoutParams.MATCH_PARENT - 20, ((Constant.height / 2) + (Constant.height / 5)));
        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
        ListView listView = (ListView) dialog.findViewById(R.id.motherList);
        MotherAdapter motherAdapter = new MotherAdapter(HomeActivity.this, helper.viewMother());
        listView.setAdapter(motherAdapter);
        dialog.show();
    }


    @Override
    protected void onStop() {
        // To prevent a memory leak on rotation, make sure to call stopAutoCycle() on the slider before activity or fragment is destroyed
        mDemoSlider.stopAutoCycle();
        super.onStop();
    }

    @Override
    public void onSliderClick(BaseSliderView slider) {
        Toast.makeText(this, slider.getBundle().get("extra") + "", Toast.LENGTH_SHORT).show();
    }

    @Override
    public void onBackPressed() {
        Constant.setDialog(HomeActivity.this, getResources().getString(R.string.close_permission));
    }

    @Override
    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
    }

    @Override
    public void onPageSelected(int position) {
        Log.d("Slider Demo", "Page Changed: " + position);
    }

    @Override
    public void onPageScrollStateChanged(int state) {
    }

    /**/
    class MotherAdapter extends BaseAdapter {

        private Context context;
        private List<MotherRecordTable> list;
        private LayoutInflater inflater;
        private ViewHolder viewHolder;

        public MotherAdapter(Context context, List<MotherRecordTable> list) {
            this.list = list;
            this.context = context;
            inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            viewHolder = new ViewHolder();
        }

        @Override
        public int getCount() {
            return list.size();
        }

        @Override
        public long getItemId(int i) {
            return 0;
        }

        @Override
        public Object getItem(int i) {
            return list.get(i);
        }

        @Override
        public View getView(int i, View view, ViewGroup viewGroup) {
            view = inflater.inflate(R.layout.mother_profile_row, viewGroup, false);
            viewHolder.name = (TextView) view.findViewById(R.id.motherNameTxt);
            MotherRecordTable item = list.get(i);
            viewHolder.name.setText(item.name);

            view.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {

                }
            });

            return view;
        }

        class ViewHolder {
            TextView name;

        }
    }
}
